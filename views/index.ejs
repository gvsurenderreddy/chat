<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" rel="stylesheet">
		<title>Chat avec Node.js</title>
		<style>
			form { padding: 5px; }
			#users { list-style-type: none; background-color: lightgray; }
			#messages { list-style-type: none; }
			#messages li:nth-child(odd) { background: #eee; }
			.typing { font-style: italic }
		</style>
	</head>
	<body>
		<div class="row">
			<h1 class="col-lg-12">Titre de la page</h1>
		</div>
		<div class="row container-fluid">
			<div class="col-lg-12">
				<div class="col-lg-4">
					<h3>Utilisateurs connectés</h3>
					<ul id="users">
						<li>user 1</li>
						<li>user 2</li>
						<li>user 3</li>
						<li>user 4</li>
					</ul>
				</div>
				<div class="col-lg-8">
					<h2>Messages reçus</h2>
					<ul id="messages"></ul>
				</div>
			</div>
			<form id="send-message" action="" class="form-inline">
				<div class="input-group col-lg-12">
					<input class="form-control" name="message" id="message" autocomplete="off" autofocus />
					<span class="input-group-btn" style="width: 50px;">
						<button class="btn btn-default" type="submit">Envoyer</button>
					</span>
				</div>
			</form>
		</div>
		<script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
		<script src="/socket.io/socket.io.js"></script>
		<script>
		var socket = io();
		
		var isTyping = false;
		
		socket.on('stopped-typing', function(username) {
			$('li#' + username).remove();
		});
		socket.on('user-typing', function(data) {
			// tester si l'élément de liste n'existe pas déjà, auquel cas, on ne fait rien.
			var match = $('li#' + data.username).length;
			if (match == 0) {
				$('#messages').append("<li id='" + data.username + "'>" + data.username + " est en train d'écrire... </li>");
			}
		});
		socket.on('message', function(data) {
			addMessage(data.username, data.message, data.date);
		});
		socket.on('disconnect', function() {
			displayMessage("Vous avez été déconnecté du serveur de chat.");
		});
		socket.on('connect', function() {
			displayMessage('Vous êtes à présent connecté au serveur de chat en tant que <%= username %>.');
		});
		socket.on('user-connected', function(data) {
			displayMessage(data.username + ' a rejoint le Chat !');
		});
		socket.on('user-disconnected', function(data) {
			displayMessage(data.username + ' a quitté la discussion.');
		});
		
		// Lorsqu'on envoie le formulaire, on transmet le message et on l'affiche sur la page
		$('form').submit(function () {
			// récupération du message saisi par l'utilisateur
			var message = $('#message').val();
			
			// si message vide, on sort:
			if (message == '')
				return false;
			
			// On transmet le message au serveur
			socket.emit('message', message);
			
			// Vide la zone de Chat et remet le focus dessus
			$('#message').val('').focus();
			
			// on remet à zéro le flag isTyping
			isTyping = false;
			
			return false;
		});
		
		$('#message').keydown(function(event) {
			// 13 = ENTER, 8 = backspace
			if (event.which == 8) {
				var message = $('#message').val();
				//console.log('message: ' + message);
				if (message == '' && isTyping == true) {
					socket.emit('stopped-typing', "<%= username %>");
					isTyping = false;
					return;
				}
			}
			if (event.which != 13) {
				isTyping = true;
				socket.emit('user-typing', {
					"username": "<%= username %>",
					"date": new Date()
				});
			}
		});
		
		// Ajoute un message dans la page
		var addMessage = function(username, message, date) {
			$('#messages').append($('<li>').html($('<strong>').text(username)).append(" - " + message));
		};
		var displayMessage = function(message){
			$('#messages').append($('<li>').text(message));
		};
		
		displayMessage("Connecté en tant que <%=username%>");
		
		
	</script>
	</body>
</html>
